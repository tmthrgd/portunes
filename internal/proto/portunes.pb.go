// Code generated by protoc-gen-go. DO NOT EDIT.
// source: portunes.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	portunes.proto

It has these top-level messages:
	HashRequest
	HashResponse
	VerifyRequest
	VerifyResponse
	Hash
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type HashRequest struct {
	Password string `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	Key      []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *HashRequest) Reset()                    { *m = HashRequest{} }
func (m *HashRequest) String() string            { return proto1.CompactTextString(m) }
func (*HashRequest) ProtoMessage()               {}
func (*HashRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HashRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *HashRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *HashRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type HashResponse struct {
	Hash *Hash `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
}

func (m *HashResponse) Reset()                    { *m = HashResponse{} }
func (m *HashResponse) String() string            { return proto1.CompactTextString(m) }
func (*HashResponse) ProtoMessage()               {}
func (*HashResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HashResponse) GetHash() *Hash {
	if m != nil {
		return m.Hash
	}
	return nil
}

type VerifyRequest struct {
	Password string `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	Key      []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Hash     *Hash  `protobuf:"bytes,4,opt,name=hash" json:"hash,omitempty"`
}

func (m *VerifyRequest) Reset()                    { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string            { return proto1.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()               {}
func (*VerifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VerifyRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *VerifyRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *VerifyRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *VerifyRequest) GetHash() *Hash {
	if m != nil {
		return m.Hash
	}
	return nil
}

type VerifyResponse struct {
	Valid  bool `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
	Rehash bool `protobuf:"varint,2,opt,name=rehash" json:"rehash,omitempty"`
}

func (m *VerifyResponse) Reset()                    { *m = VerifyResponse{} }
func (m *VerifyResponse) String() string            { return proto1.CompactTextString(m) }
func (*VerifyResponse) ProtoMessage()               {}
func (*VerifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *VerifyResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *VerifyResponse) GetRehash() bool {
	if m != nil {
		return m.Rehash
	}
	return false
}

type Hash struct {
	Version uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Salt    []byte `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
	Hash    []byte `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *Hash) Reset()                    { *m = Hash{} }
func (m *Hash) String() string            { return proto1.CompactTextString(m) }
func (*Hash) ProtoMessage()               {}
func (*Hash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Hash) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Hash) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Hash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto1.RegisterType((*HashRequest)(nil), "portunes.HashRequest")
	proto1.RegisterType((*HashResponse)(nil), "portunes.HashResponse")
	proto1.RegisterType((*VerifyRequest)(nil), "portunes.VerifyRequest")
	proto1.RegisterType((*VerifyResponse)(nil), "portunes.VerifyResponse")
	proto1.RegisterType((*Hash)(nil), "portunes.Hash")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Portunes service

type PortunesClient interface {
	Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error)
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
}

type portunesClient struct {
	cc *grpc.ClientConn
}

func NewPortunesClient(cc *grpc.ClientConn) PortunesClient {
	return &portunesClient{cc}
}

func (c *portunesClient) Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error) {
	out := new(HashResponse)
	err := grpc.Invoke(ctx, "/portunes.Portunes/Hash", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portunesClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := grpc.Invoke(ctx, "/portunes.Portunes/Verify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Portunes service

type PortunesServer interface {
	Hash(context.Context, *HashRequest) (*HashResponse, error)
	Verify(context.Context, *VerifyRequest) (*VerifyResponse, error)
}

func RegisterPortunesServer(s *grpc.Server, srv PortunesServer) {
	s.RegisterService(&_Portunes_serviceDesc, srv)
}

func _Portunes_Hash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortunesServer).Hash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portunes.Portunes/Hash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortunesServer).Hash(ctx, req.(*HashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Portunes_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortunesServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portunes.Portunes/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortunesServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Portunes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "portunes.Portunes",
	HandlerType: (*PortunesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hash",
			Handler:    _Portunes_Hash_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _Portunes_Verify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "portunes.proto",
}

func init() { proto1.RegisterFile("portunes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x49, 0x9b, 0x86, 0xf4, 0xda, 0x46, 0xe8, 0x04, 0x25, 0xca, 0x54, 0x79, 0xea, 0xd4,
	0x21, 0x0c, 0x4c, 0x30, 0x30, 0x65, 0x03, 0x65, 0x60, 0x60, 0x33, 0xaa, 0x51, 0x22, 0xaa, 0x38,
	0xf8, 0x92, 0xa2, 0xae, 0xfc, 0x72, 0x94, 0xb3, 0x13, 0x44, 0x91, 0x98, 0x3a, 0xe5, 0xde, 0xb3,
	0xfd, 0xde, 0x17, 0xcb, 0x10, 0xd5, 0xda, 0x34, 0x6d, 0xa5, 0x68, 0x53, 0x1b, 0xdd, 0x68, 0x0c,
	0x7b, 0x2d, 0x1e, 0x61, 0x96, 0x49, 0x2a, 0x72, 0xf5, 0xd1, 0x2a, 0x6a, 0x30, 0x81, 0xb0, 0x96,
	0x44, 0x9f, 0xda, 0x6c, 0x63, 0x6f, 0xe5, 0xad, 0xa7, 0xf9, 0xa0, 0xf1, 0x02, 0xc6, 0xef, 0xea,
	0x10, 0x8f, 0x56, 0xde, 0x7a, 0x9e, 0x77, 0x23, 0x22, 0xf8, 0x5b, 0xd9, 0xc8, 0x78, 0xcc, 0x16,
	0xcf, 0x22, 0x85, 0xb9, 0x0d, 0xa4, 0x5a, 0x57, 0xa4, 0x50, 0x80, 0x5f, 0x48, 0x2a, 0x38, 0x6d,
	0x96, 0x46, 0x9b, 0x81, 0x84, 0x77, 0xf1, 0x9a, 0x68, 0x61, 0xf1, 0xac, 0x4c, 0xf9, 0x76, 0x38,
	0x19, 0xc6, 0x50, 0xeb, 0xff, 0x53, 0x7b, 0x0f, 0x51, 0x5f, 0xeb, 0x60, 0x2f, 0x61, 0xb2, 0x97,
	0xbb, 0xd2, 0x96, 0x86, 0xb9, 0x15, 0xb8, 0x84, 0xc0, 0x28, 0x4e, 0x1b, 0xb1, 0xed, 0x94, 0xc8,
	0xc0, 0xef, 0xd2, 0x30, 0x86, 0xf3, 0xbd, 0x32, 0x54, 0xea, 0x8a, 0xcf, 0x2d, 0xf2, 0x5e, 0x76,
	0x64, 0x24, 0x77, 0x8d, 0x83, 0xe5, 0xb9, 0xf3, 0x38, 0xcb, 0xd1, 0x76, 0x73, 0xfa, 0xe5, 0x41,
	0xf8, 0xe4, 0x08, 0xf1, 0xd6, 0xc5, 0x5e, 0x1d, 0x41, 0xdb, 0xbb, 0x49, 0x96, 0xc7, 0xb6, 0x65,
	0x17, 0x67, 0x78, 0x07, 0x81, 0xfd, 0x1f, 0xbc, 0xfe, 0xd9, 0xf3, 0xeb, 0x62, 0x93, 0xf8, 0xef,
	0x42, 0x7f, 0xfc, 0x61, 0x9a, 0x79, 0x2f, 0x13, 0x7e, 0x1f, 0xaf, 0x01, 0x7f, 0x6e, 0xbe, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xa7, 0x73, 0x7d, 0xff, 0x38, 0x02, 0x00, 0x00,
}
